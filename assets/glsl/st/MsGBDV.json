[{"ver":"0.1","info":{"id":"MsGBDV","date":"1530533711","viewed":133,"name":"Light saber fight","username":"FlorianDuf","description":"Light saber fight fort the fun.","likes":5,"published":1,"flags":0,"tags":[]},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct Segment {\n  \n    vec2 p1;\n    vec2 p2;\n};\n\n\nfloat add(in vec3 col1, in vec3 col2)\n{\n \n   if(col1 != vec3(0.0))\n       return 0.0;\n    \n   if ( col2 != vec3(0.0) )\n       return 1.0;\n    \n    return 0.5;\n}\n\nbool intersection(in Segment s1, in Segment s2, out vec2 pres)\n{\n\n    pres = vec2(0.0);\n    \n    vec2 I = s1.p2-s1.p1;\n    vec2 J = s2.p2-s2.p1;\n    float div = I.x*J.y-I.y*J.x;\n\n    \n    if ( div == 0.0 )\n        return false;\n    \n    float m = - ( -I.x*s1.p1.y + I.x* s2.p1.y+ I.y * s1.p1.x - I.y * s2.p1.x) \/ div;\n    float k = - ( s1.p1.x * J.y - s2.p1.x*J.y - J.x * s1.p1.y + J.x * s2.p1.y) \/ div;\n    \n    if ( 0.0 < m && m < 1.0 && 0.0 < k && k < 1.0 )\n    {\n    \tpres = s1.p1 + k * I;\n    \n    \treturn true;\n    }\n    \n    return false;\n}\n\nfloat distLine(in Segment s, in vec2 p)\n{\n    vec2 p1p2 = s.p2-s.p1;\n    \n    if (p1p2 == vec2(0.0) )\n        return 0.0;\n    \n \t\/\/return dot(p1p2, p-s.p1) \/ dot(p1p2, p1p2);\n    vec2 k = dot(p1p2, p-s.p1) \/ dot(p1p2, p1p2) * p1p2 + s.p1;\n    \n    if ( (distance(s.p1, k) + distance(s.p2, k)) >= length(p1p2) + 0.001 ) \n    \treturn min(distance(s.p1, p),distance(s.p2, p));\n\n    \n    return length((dot(p1p2, p-s.p1) \/ dot(p1p2, p1p2) * p1p2 + s.p1)-p);    \n}\n\nfloat dist(in vec2 uv, in vec2 p, in float level)\n{\n    float h = level;\n    uv = pow(abs(uv - p), vec2(h));\n    return pow( uv.x + uv.y, 1.\/h) ;  \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord\/iResolution.x;\n\n    \n    \n \tfloat speed = 10.50;   \n    \n    Segment s = Segment(0.1*vec2(sin(speed*iTime*0.2415), sin(speed*iTime*0.16485))+vec2(0.1), 0.4*vec2(sin(speed*iTime*0.25), sin(speed*iTime*0.6485))+vec2(0.5));\n    vec3 col = mix(vec3(0.2, 0.5, 1.0), vec3(0.0), min(1.0,30.0*distLine(s, uv)));\n    col = mix(vec3(1.0), col, min(1.0, 100.0*distLine(s, uv)));\n    \n    Segment s2 = Segment(0.1*vec2(sin(speed*iTime*0.34985)+8.0, sin(speed*iTime*0.52144))+vec2(0.1), 0.3*vec2(sin(speed*iTime*0.3985), sin(speed*iTime*0.5214))+vec2(0.5));\n    vec3 col2 = mix(vec3(1.0, 0.1, 0.2), vec3(0.0), min(1.0, 30.0*distLine(s2, uv)));\n    col2 = mix(vec3(1.0), col2, min(1.0, 100.0*distLine(s2, uv)));\n\n    \n    col = mix(col, col2, add(col, col2) );\n    \n    \n    \n    col =  max(col, col2);\n    \n    vec2 intersec;\n    \n    if (  intersection(s, s2, intersec) )\n    {\n        \n    \tcol = min(col +  mix(vec3(0.0), vec3((sin(iTime) * 0.5 + 0.5), 0.5,1.0) ,1.0\/dist(uv, intersec, 5.0 * ( 0.5 * sin(854575852656.0*iTime) + 0.55)) \/ 15.0), vec3(1.0));\n    }\n    \n    \n    \/\/ Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}]