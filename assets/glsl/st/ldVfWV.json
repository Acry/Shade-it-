[{"ver":"0.1","info":{"id":"ldVfWV","date":"1530982736","viewed":56,"name":"Fireworks night","username":"olympus223","description":"A simple fireworks effect. This can probably be improved a lot, as i'm new to this. Any tips would be welcome!","likes":2,"published":1,"flags":0,"tags":[]},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define s(a, b, t) smoothstep(a, b, t)\n#define g -9.81\n\nfloat distLine(vec2 p, vec2 a, vec2 b) {\n\tvec2 pa = p - a;\n    vec2 ba = b - a;\n    float t = clamp(dot(pa, ba) \/ dot(ba, ba), 0.0, 1.0);\n    return length(pa - ba * t);\n}\n\nfloat line(vec2 uv, vec2 a, vec2 b, float thickness) {\n    return s(thickness, thickness - 0.01, distLine(uv, a, b));\n}\n\n\nfloat N21(vec2 p) {\n\tp = fract(p * vec2(233.34, 851.73));\n    p += dot(p, p + 23.45);\n    return fract(p.x * p.y);\n}\n\nvec2 N22(vec2 p) {\n\tfloat n = N21(p);\n    return vec2(n, N21(p + n));\n}\n\nfloat N11(float n) {\n    return fract(sin(dot(vec2(cos(n), sin(n)) ,vec2(27.9898, 38.233))) * 88.5453);\n}\n\n\nfloat particle(vec2 uv, vec2 p, vec2 v, float r, float t) {\n    float x = p.x + v.x * t;\n    float y = p.y + v.y * t + g \/ 2.0 * t * t;\n    vec2 j = (vec2(x, y) - uv) * 20.0;\n    float sparkle = 1.0 \/ dot(j, j);\n    return sparkle;\n}\n\nfloat seed = 0.32;\n\nfloat explosion(vec2 uv, vec2 p, float s, float n, float f, float t) {\n    float m = 0.0;\n    float dt = 0.5;\n\tfor(float i = 0.0; i < n; i++) {\n    \tseed += i;\n        vec2 rand = vec2(1.0, 2.0) * (vec2(-1.0, 1.0) + 2.0 * N22(vec2(seed, i)));\n    \tvec2 v = vec2(cos(seed), sin(seed)) + rand;\n        m += particle(uv, p, v, s, t)\n            * s(2.0, 2.0 - dt, t)\n            * s(0.0, dt, t);\n    }   \n    return m;\n}\n\nfloat fireworks(vec2 uv, vec2 p, float h, float w, float n, float s, float f, float t) {\n    vec2 p1 = vec2(p.x, p.y + clamp(pow(t, 5.0), 0.0, h));\n    vec2 p2 = vec2(p.x, p.y + clamp(pow(0.9 * t, 5.0), 0.0, h));\n    float e1 = pow(h, 1.0 \/ 5.0) * 1.1;\n    float e2 = 10.0 \/ 9.0 * e1;\n    float m = line(uv, p1, p2, w) * s(e2, e2 - 0.5, t);\n    return m + explosion(uv, p1, s, n, f, t - e1 * 0.9);\n}\n\nvec3 base(vec2 uv) {\n\treturn 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0, 2, 4));   \n}\n\nfloat back(vec2 uv, vec2 p, float t) {\n    float dt = 0.3;\n    float j = length(p - uv);\n    float m = exp(-0.005 * j * j);\n    return 0.2 * m * s(-dt \/ 4.0, 0.0, t) * s(dt, 0.0, t);\n}\n\nfloat stars(vec2 uv) {\n    float r = N21(uv);\n    return s(0.001, 0.0, r);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) \/ iResolution.y;\n    vec2 mouse = (iMouse.xy \/ iResolution.xy) - 0.5;\n    float t = iTime \/ 10.0;\n    float scale = 10.0;\n    uv *= scale;\n    vec3 col = vec3(0.05 + stars(uv));\n    \n    float a = -0.05 * sin(t * 15.0);\n    float co = cos(a);\n    float si = sin(a);\n    mat2 trans1 = mat2(co, si, -si, co);\n    vec2 trans2 = vec2(-20.0 * a, 0.0);\n    uv *= trans1;\n    uv += trans2;\n    \n    for(float i = 0.0; i < 1.0; i += 1.0 \/ 8.0) {\n        float ti = mod(t * 9.0 - i * 5.0, 4.0);\n        float scale = mix(2.0, 0.3, ti \/ 4.0);\n        vec2 uvs = uv * scale;\n        float rand = N11(i);\n        float h = 10.0 + rand * 4.0;\n        float w = 0.03;\n        float n = 80.0;\n        float s = 0.9;\n        float f = 1.5;\n        vec2 p = vec2(mix(-8.0, 8.0, rand), -10.0);\n          \n        col += back(uvs, vec2(p.x, p.y + h), ti - 1.8) \n            + fireworks(uvs, p, h, w, n, s, f, ti) * base(uv);\n    }\n    \n    fragColor = vec4(col, 0.0);\n}","name":"Image","description":"","type":"image"}]}]