[{"ver":"0.1","info":{"id":"4t2SRh","date":"1441550472","viewed":82355,"name":"Umbrellar","username":"candycat","description":"Draw a umbrellar","likes":113,"published":1,"flags":0,"tags":[]},"renderpass":[{"inputs":[],"outputs":[],"code":"float sdfCircle(vec2 center, float radius, vec2 coord )\n{\n    vec2 offset = coord - center;\n    \n    return sqrt((offset.x * offset.x) + (offset.y * offset.y)) - radius;\n}\n\nfloat sdfEllipse(vec2 center, float a, float b, vec2 coord)\n{\n    float a2 = a * a;\n    float b2 = b * b;\n    return (b2 * (coord.x - center.x) * (coord.x - center.x) + \n        a2 * (coord.y - center.y) * (coord.y - center.y) - a2 * b2)\/(a2 * b2);\n}\n\nfloat sdfLine(vec2 p0, vec2 p1, float width, vec2 coord)\n{\n    vec2 dir0 = p1 - p0;\n\tvec2 dir1 = coord - p0;\n\tfloat h = clamp(dot(dir0, dir1)\/dot(dir0, dir0), 0.0, 1.0);\n\treturn (length(dir1 - dir0 * h) - width * 0.5);\n}\n\nfloat sdfUnion( const float a, const float b )\n{\n    return min(a, b);\n}\n\nfloat sdfDifference( const float a, const float b)\n{\n    return max(a, -b);\n}\n\nfloat sdfIntersection( const float a, const float b )\n{\n    return max(a, b);\n}\n\nvec4 render(float d, vec3 color, float stroke)\n{\n    \/\/stroke = fwidth(d) * 2.0;\n    float anti = fwidth(d) * 1.0;\n    vec4 strokeLayer = vec4(vec3(0.05), 1.0-smoothstep(-anti, anti, d - stroke));\n    vec4 colorLayer = vec4(color, 1.0-smoothstep(-anti, anti, d));\n\n    if (stroke < 0.000001) {\n    \treturn colorLayer;\n    }\n    return vec4(mix(strokeLayer.rgb, colorLayer.rgb, colorLayer.a), strokeLayer.a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat size = min(iResolution.x, iResolution.y);\n    float pixSize = 1.0 \/ size;\n\tvec2 uv = fragCoord.xy \/ iResolution.x;\n    float stroke = pixSize * 1.5;\n    vec2 center = vec2(0.5, 0.5 * iResolution.y\/iResolution.x);\n    \n    float a = sdfEllipse(vec2(0.5, center.y*2.0-0.34), 0.25, 0.25, uv);\n    float b = sdfEllipse(vec2(0.5, center.y*2.0+0.03), 0.8, 0.35, uv);\n    b = sdfIntersection(a, b);\n    vec4 layer1 = render(b, vec3(0.32, 0.56, 0.53), fwidth(b) * 2.0);\n    \n    \/\/ Draw strips\n    vec4 layer2 = layer1;\n    float t, r0, r1, r2, e, f;\n    vec2 sinuv = vec2(uv.x, (sin(uv.x*40.0)*0.02 + 1.0)*uv.y);\n    for (float i = 0.0; i < 10.0; i++) {\n    \tt = mod(iTime + 0.3 * i, 3.0) * 0.2;\n    \tr0 = (t - 0.15) \/ 0.2 * 0.9 + 0.1;\n    \tr1 = (t - 0.15) \/ 0.2 * 0.1 + 0.9;\n        r2 = (t - 0.15) \/ 0.2 * 0.15 + 0.85;\n        e = sdfEllipse(vec2(0.5, center.y*2.0+0.37-t*r2), 0.7*r0, 0.35*r1, sinuv);\n    \tf = sdfEllipse(vec2(0.5, center.y*2.0+0.41-t), 0.7*r0, 0.35*r1, sinuv);\n    \tf = sdfDifference(e, f);\n    \tf = sdfIntersection(f, b);\n    \tvec4 layer = render(f, vec3(1.0, 0.81, 0.27), 0.0);\n        layer2 = mix(layer2, layer, layer.a);\n    }\n    \n    \n    \/\/ Draw the handle\n    float bottom = 0.08;\n    float handleWidth = 0.01;\n    float handleRadius = 0.04;\n    float d = sdfCircle(vec2(0.5-handleRadius+0.5*handleWidth, bottom), handleRadius, uv);\n    float c = sdfCircle(vec2(0.5-handleRadius+0.5*handleWidth, bottom), handleRadius-handleWidth, uv);\n    d = sdfDifference(d, c);\n    c = uv.y - bottom;\n    d = sdfIntersection(d, c);\n    c = sdfLine(vec2(0.5, center.y*2.0-0.05), vec2(0.5, bottom), handleWidth, uv);\n    d = sdfUnion(d, c);\n    c = sdfCircle(vec2(0.5, center.y*2.0-0.05), 0.01, uv);\n    d = sdfUnion(c, d);\n    c = sdfCircle(vec2(0.5-handleRadius*2.0+handleWidth, bottom), handleWidth*0.5, uv);\n    d = sdfUnion(c, d);\n    vec4 layer0 = render(d, vec3(0.404, 0.298, 0.278), stroke);\n    \n    vec2 p = (2.0*fragCoord.xy-iResolution.xy)\/min(iResolution.y,iResolution.x);\n    vec3 bcol = vec3(1.0,0.8,0.7-0.07*p.y)*(1.0-0.25*length(p));\n    fragColor = vec4(bcol, 1.0);  \n    fragColor.rgb = mix(fragColor.rgb, layer0.rgb, layer0.a);\n    fragColor.rgb = mix(fragColor.rgb, layer1.rgb, layer1.a);\n    fragColor.rgb = mix(fragColor.rgb, layer2.rgb, layer2.a);\n    \n    fragColor.rgb = pow(fragColor.rgb, vec3(1.0\/2.2));\n}","name":"","description":"","type":"image"}]}]